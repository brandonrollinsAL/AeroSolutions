import { useState } from 'react';  

const ElevateBot = () => {  
  const [isOpen, setIsOpen] = useState(false);  
  const [message, setMessage] = useState('');  
  const [chatHistory, setChatHistory] = useState([]);  

  const handleSubmit = async (e) => {  
    e.preventDefault();  
    if (!message) return;  
    const response = await fetch('/api/chat/sessions', {  
      method: 'POST',  
      headers: { 'Content-Type': 'application/json' },  
      body: JSON.stringify({ message }),  
    });  
    const data = await response.json();  
    setChatHistory([...chatHistory, { user: message, bot: data.response }]);  
    setMessage('');  
  };  

  return (  
    <div className="fixed bottom-4 right-4 z-50">  
      {!isOpen ? (  
        <button  
          onClick={() => setIsOpen(true)}  
          className="bg-electric-cyan text-white rounded-full p-4 shadow-lg hover:bg-sunset-orange transition-colors duration-200"  
        >  
          <svg className="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">  
            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M8 10h.01M12 10h.01M16 10h.01M9 16H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-5l-5 5v-5z" />  
          </svg>  
        </button>  
      ) : (  
        <div className="bg-light-gray rounded-lg shadow-lg w-80 h-96 flex flex-col">  
          <div className="bg-slate-blue text-white p-4 rounded-t-lg flex justify-between items-center">  
            <h3 className="text-lg font-poppins">ElevateBot</h3>  
            <button onClick={() => setIsOpen(false)} className="text-light-gray hover:text-sunset-orange">  
              <X size={20} />  
            </button>  
          </div>  
          <div className="flex-1 p-4 overflow-y-auto">  
            {chatHistory.map((chat, index) => (  
              <div key={index} className="mb-4">  
                <p className="text-lato text-slate-blue font-bold">You:</p>  
                <p className="text-lato text-slate-blue">{chat.user}</p>  
                <p className="text-lato text-sunset-orange font-bold mt-2">ElevateBot:</p>  
                <p className="text-lato text-slate-blue">{chat.bot}</p>  
              </div>  
            ))}  
          </div>  
          <form onSubmit={handleSubmit} className="p-4 border-t border-gray-200">  
            <input  
              type="text"  
              value={message}  
              onChange={(e) => setMessage(e.target.value)}  
              placeholder="Ask ElevateBot anything..."  
              className="w-full p-2 border rounded-lg text-lato text-slate-blue focus:outline-none focus:ring-2 focus:ring-electric-cyan"  
            />  
          </form>  
        </div>  
      )}  
    </div>  
  );  
};  
export default ElevateBot;  